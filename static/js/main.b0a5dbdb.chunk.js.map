{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","location","fwdDisabled","bckDisabled","loc","maxlength","this","props","images","length","frameSize","setState","step","itemWidth","animationDuration","infinite","carouselStyle","width","imgStyle","blockStyle","transform","transition","enable","edge","start","end","className","type","onClick","disabled","style","map","source","index","arr","src","alt","toString","indexOf","React","Component","App","handleInputs","event","currentState","currentTarget","id","stateValue","value","prevState","htmlFor","min","max","defaultValue","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0a5dbdb.chunk.js","sourcesContent":["/* eslint-disable default-case */\nimport React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\ntype State = {\n  location: number,\n  fwdDisabled: boolean,\n  bckDisabled: boolean,\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state: Readonly<State> = {\n    location: 0,\n    fwdDisabled: false,\n    bckDisabled: false,\n  };\n\n  loc = 0;\n\n  componentDidUpdate() {\n    const maxlength = this.props.images.length - this.props.frameSize;\n\n    if (this.state.location > maxlength) {\n      this.setState({ location: maxlength });\n    }\n  }\n\n  render() {\n    const {\n      location,\n    } = this.state;\n\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const width = itemWidth * frameSize;\n\n    const carouselStyle = {\n      width: `${width}px`,\n    };\n\n    const imgStyle = {\n      width: `${itemWidth}px`,\n    };\n\n    const blockStyle = {\n      transform: `translate(${-location * itemWidth}px)`,\n      transition: `transform ${animationDuration / 1000}s`,\n    };\n\n    const length = images.length - frameSize;\n\n    const enable = () => {\n      if (this.loc !== 0) {\n        this.setState({ bckDisabled: false });\n      }\n\n      if (this.loc !== length) {\n        this.setState({ fwdDisabled: false });\n      }\n    };\n\n    const edge = (start: number, end: number) => {\n      if (!infinite) {\n        switch (start) {\n          case 0:\n            this.setState({ fwdDisabled: true });\n            break;\n          case length:\n            this.setState({ bckDisabled: true });\n            break;\n        }\n      }\n\n      return end;\n    };\n\n    const moveFwd = () => {\n      this.loc += step;\n\n      if (this.loc >= length) {\n        this.loc = edge(0, length);\n      }\n\n      if (location === length && infinite) {\n        this.loc = 0;\n      }\n\n      enable();\n\n      this.setState({ location: this.loc });\n    };\n\n    const moveBck = () => {\n      this.loc -= step;\n\n      if (this.loc <= 0) {\n        this.loc = edge(length, 0);\n      }\n\n      if (location === 0 && infinite) {\n        this.loc = length;\n      }\n\n      enable();\n\n      this.setState({ location: this.loc });\n    };\n\n    return (\n      <div className=\"Carousel\">\n        <div className=\"Carousel__wrapper\">\n          <button\n            className=\"Carousel__prev-button\"\n            type=\"button\"\n            aria-label=\"left\"\n            onClick={moveBck}\n            disabled={this.state.bckDisabled}\n          />\n          <div className=\"Carousel__block\" style={carouselStyle}>\n            <ul className=\"Carousel__list\" style={blockStyle}>\n              {images.map((source, index, arr) => (\n                <li key={arr.indexOf(source)}>\n                  <img\n                    src={source}\n                    alt={index.toString()}\n                    style={imgStyle}\n                    className=\"Carousel__img\"\n                  />\n                </li>\n              ))}\n            </ul>\n          </div>\n          <button\n            className=\"Carousel__next-button\"\n            type=\"button\"\n            aria-label=\"right\"\n            data-cy=\"next\"\n            onClick={moveFwd}\n            disabled={this.state.fwdDisabled}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","/* eslint-disable default-case */\nimport React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 2,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    const handleInputs = (event: React.ChangeEvent<HTMLInputElement>) => {\n      const currentState = event.currentTarget.id;\n      const stateValue = +event.currentTarget.value;\n\n      switch (currentState) {\n        case 'itemWidth':\n          this.setState({ itemWidth: +stateValue });\n          break;\n        case 'frameSize':\n          this.setState({ frameSize: +stateValue });\n          break;\n        case 'step':\n          this.setState({ step: +stateValue });\n          break;\n        case 'animationDuration':\n          this.setState({ animationDuration: +stateValue });\n          break;\n        case 'infinite':\n          this.setState((prevState) => ({\n            infinite: !prevState.infinite,\n          }));\n          break;\n      }\n    };\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">\n          Carousel with\n          &nbsp;\n          {images.length}\n          &nbsp;\n          images\n        </h1>\n\n        <form className=\"App__form\">\n          <label htmlFor=\"itemWidth\">\n            <span>ItemWidth:</span>\n            <input\n              className=\"App__input\"\n              min={100}\n              max={200}\n              step={10}\n              type=\"number\"\n              id=\"itemWidth\"\n              defaultValue={itemWidth}\n              onChange={handleInputs}\n            />\n          </label>\n\n          <label htmlFor=\"frameSize\">\n            <span>FrameSize:</span>\n            <input\n              className=\"App__input\"\n              min={1}\n              max={images.length}\n              type=\"number\"\n              id=\"frameSize\"\n              defaultValue={frameSize}\n              onChange={handleInputs}\n            />\n          </label>\n\n          <label htmlFor=\"step\">\n            <span>Step:</span>\n            <input\n              className=\"App__input\"\n              min={1}\n              max={images.length}\n              type=\"number\"\n              id=\"step\"\n              defaultValue={step}\n              onChange={handleInputs}\n            />\n          </label>\n\n          <label htmlFor=\"duration\">\n            <span>AnimationDuration:</span>\n            <input\n              className=\"App__input\"\n              min={100}\n              max={3000}\n              step={100}\n              type=\"number\"\n              id=\"animationDuration\"\n              defaultValue={animationDuration}\n              onChange={handleInputs}\n            />\n          </label>\n\n          <label htmlFor=\"infinite\">\n            <span>Infinite:</span>\n            <input\n              className=\"App__input\"\n              type=\"checkbox\"\n              id=\"infinite\"\n              onChange={handleInputs}\n            />\n          </label>\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}